const express = require("express");

const cors = require("cors");

const axios = require("axios");

const { v4 } = require("uuid");

const usersRouter = require("./routes/api/users");
const propRouter = require("./routes/api/property");

const TelegramBot = require("node-telegram-bot-api");

require("dotenv").config();

const { TELEGRAM_BOT_API, SERVER_URL } = process.env;

const bot = new TelegramBot(TELEGRAM_BOT_API, {
  polling: true,
});

const userCtrl = require("./controllers/users");
const propertyCtrl = require("./controllers/property");

const {
  markUpInArray,
  formatDate,
  dayCounter,
  getLiqpayData,
} = require("./helpers");
const LIQPAY_CONSTANTS = require("./constants/liqpayConstants");
const { getAllUsersChatId } = require("./controllers/users");

const app = express();

app.use(cors());
app.use(express.json());

app.use("/api/wakeup", (req, res, next) => {
  console.log("Wake Up");
  res.json({ message: true });
});

app.use("/api/users", usersRouter);

app.use(express.urlencoded({ extended: false }));
app.use("/api/prop", propRouter);

app.use((req, res) => {
  res.status(404).json({ message: "Not found" });
});

app.use((err, req, res, next) => {
  const { status = 500, message } = err;
  console.log(err);
  res.status(status).json({ message });
});

// TELEGRAM BOT
const TELEGRAM_API = `https://api.telegram.org/bot${TELEGRAM_BOT_API}`;
const URI = `/webhook/${TELEGRAM_BOT_API}`;
const webhookURL = `${"https://hata-telegrambot.onrender.com"}${URI}`;

const setupWebhook = async () => {
  try {
    const { data } = await axios.get(
      `${TELEGRAM_API}/setWebhook?url=${webhookURL}&drop_pending_updates=true`
    );
  } catch (error) {
    return error;
  }
};

const commands = [
  {
    command: "start",
    description: "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞",
  },
  {
    command: "oferta",
    description: "–î–æ–≥–æ–≤—ñ—Ä –æ—Ñ–µ—Ä—Ç–∏",
  },
  {
    command: "help",
    description: "–ö–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞",
  },
];
bot.setMyCommands(commands);

const userCallbackData = {};
const prepareAlert = {};
bot.on("callback_query", async (ctx) => {
  try {
    const user = await userCtrl.getUserByChatId(ctx.message.chat.id);

    if (ctx.data === "mainPage") {
      await bot.sendMessage(
        ctx.message.chat.id,
        `–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —è–∫–∞ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å.`,
        {
          reply_markup: {
            inline_keyboard: [
              [
                { text: "üè° –î—ñ–ª—è–Ω–∫–∏", callback_data: "propertyPage" },
                { text: "üì¢ –ù–æ–≤–∏–Ω–∏", callback_data: "newsPage" },
              ],
              [
                { text: "üë§ –ú–æ—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", callback_data: "personPage" },
                { text: "üò™ –ë–æ—Ä–∂–Ω–∏–∫–∏", callback_data: "debtorPage" },
              ],
              [
                { text: "üôã‚Äç‚ôÇÔ∏è –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è", callback_data: "pollPage" },
                { text: "üèÜ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", callback_data: "aboutPage" },
              ],

              user.admin
                ? [
                    { text: "üë• –í—Å—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏", callback_data: "allCounters" },
                    {
                      text: "üì£ –ù–∞–ø–∏—Å–∞—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è",
                      callback_data: "writeAlert",
                    },
                  ]
                : [],

              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
            one_time_keyboard: true,
          },
        }
      );
    }
    if (ctx.data === "writeAlert") {
      prepareAlert[ctx.message.chat.id] = "";
      await bot.sendMessage(
        ctx.message.chat.id,
        "–ù–∞–ø–∏—à–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —Ç–∞ –≤–æ–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç—å—Å—è —É—Å—ñ–º —É—á–∞—Å–Ω–∏–∫–∞–º –±–æ—Ç–∞!",
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        }
      );
    }
    if (ctx.data === "alertAdv") {
      const messageToClient = ctx.message.text.split("–û—Å—å")[0].trim();
      const creatorName = user.name.split(" ").slice(0, 2).join(" ");

      const allUsersChatId = await getAllUsersChatId();
      const allIds = allUsersChatId
        .filter((item) => item.telegramChatId)
        .map((item) => item.telegramChatId);

      const advSender = (chatIds) => {
        const anotherIds = chatIds.splice(20);

        chatIds.forEach(async (chatPureId) => {
          await bot.sendMessage(
            chatPureId,
            `${messageToClient}\n\n–ê–≤—Ç–æ—Ä: ${creatorName}`,
            {
              reply_markup: {
                inline_keyboard: [
                  [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
                ],
              },
            }
          );
        });
        if (anotherIds) {
          setTimeout(() => {
            advSender(anotherIds);
          }, 60 * 1000);
        }
      };
      if (allIds) {
        advSender(allIds);
      }
      await bot.sendMessage(
        ctx.message.chat.id,
        "–û–≥–æ–ª–æ—à–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–µ!",
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        }
      );
    }
    if (ctx.data === "allCounters") {
      if (!user.admin) {
        await bot.sendMessage(ctx.message.chat.id, "", {
          reply_markup: {
            inline_keyboard: [
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        });
      } else {
        const allProperty = await propertyCtrl.getAllPropertyTelegram();
        const sortedProperty = allProperty.sort((a, b) => {
          const dateA = new Date(
            a.electricData.date.split(".").reverse().join("-")
          );
          const dateB = new Date(
            b.electricData.date.split(".").reverse().join("-")
          );

          return dateB - dateA;
        });
        await bot.sendMessage(
          ctx.message.chat.id,
          "<b>.................. –ü–æ—á–∞—Ç–æ–∫ —Å–ø–∏—Å–∫—É ..................</b>",
          {
            parse_mode: "HTML",
          }
        );

        for (const prop of sortedProperty) {
          const propertyUser = await userCtrl.getUserTelegramById(prop.ownerId);

          await bot.sendMessage(
            ctx.message.chat.id,
            `–Ü–º'—è: ${propertyUser.name
              .split(" ")
              .slice(0, 2)
              .join(" ")}\n–ü–æ–∫–∞–∑–Ω–∏–∫: ${prop.electricData.current} | –î–∞—Ç–∞: ${
              prop.electricData.date
            }\n–î–æ –æ–ø–ª–∞—Ç–∏: ${prop.electricData.debt || 0}`
          );
        }

        await bot.sendMessage(
          ctx.message.chat.id,
          " <b>.................. –ö—ñ–Ω–µ—Ü—å —Å–ø–∏—Å–∫—É ..................</b> ",
          {
            parse_mode: "HTML",
            reply_markup: {
              inline_keyboard: [
                [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
              ],
            },
          }
        );
      }
    }

    if (ctx.data === "personPage") {
      let message = `–Ü–º—è: ${user.name}\n–í—Å—Ç—É–ø–Ω–∏–π —á–ª–µ–Ω—Å—å–∫–∏–π –≤–Ω–µ—Å–æ–∫: ${
        user.enterFee.isAvailable
          ? `${
              user.enterFee.needToPay > 0
                ? `–¥–æ —Å–ø–ª–∞—Ç–∏ <b><i>${user.enterFee.needToPay}</i></b> –≥—Ä–Ω.`
                : "<b><i>[–û–ø–ª–∞—á–µ–Ω–æ]</i></b>"
            }`
          : "–í—ñ–¥—Å—É—Ç–Ω—ñ–π"
      }\n\n<b>–î—ñ–ª—è–Ω–∫–∏:</b>`;

      for (const [idx, id] of user.owned.entries()) {
        const prop = await propertyCtrl.getPropertyTelegramById(id);

        message += `\n    -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-\n\n–î—ñ–ª—è–Ω–∫–∞ ‚Ññ${
          prop.propertyNumber
        }\n–ü–ª–æ—â–∞: ${prop.area}\n–ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä: ${
          prop.kadastrId
        }\n–î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏: ${prop.ownershipDate}\n–ï–ª–µ–∫—Ç—Ä–∏–∫–∞: ${
          prop.hasElectic
            ? `–ù–∞—è–≤–Ω–∞\n–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –ø–æ–∫–∞–∑–Ω–∏–∫: ${prop.electricData[0]?.current}`
            : `–í—ñ–¥—Å—É—Ç–Ω—è`
        }\n\n<u>–ù–µ –æ–ø–ª–∞—á–µ–Ω—ñ —á–ª–µ–Ω—Å—å–∫—ñ –≤–Ω–µ—Å–∫–∏</u>: ${
          prop.dueArrears &&
          prop.dues
            .filter((item) => item.needPay > 0)
            .map((item) => {
              if (item.needPay > 0) {
                return `\n- ${item.year} —Ä—ñ–∫: <b><i>${item.needPay} –≥—Ä–Ω</i></b>`;
              }
            })
        }\n<u>–ó–∞–≥–∞–ª–æ–º</u>: <b><i>${prop.dueArrears} –≥—Ä–Ω</i></b>.`;
      }
      await bot.sendMessage(ctx.message.chat.id, message, {
        parse_mode: "HTML",
        reply_markup: {
          inline_keyboard: [
            [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
          ],
        },
      });
    }
    if (ctx.data === "propertyPage") {
      const markup = [];
      for (const [_, id] of user.owned.entries()) {
        const { propertyNumber } = await propertyCtrl.getPropertyTelegramById(
          id
        );

        markup.push({
          text: `üè° –î—ñ–ª—è–Ω–∫–∞ ‚Ññ${propertyNumber}`,
          callback_data: `properties ${id}`,
        });
      }
      const newMarkUp = markUpInArray(markup);
      await bot.sendMessage(
        ctx.message.chat.id,
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≤–∞–º –¥—ñ–ª—è–Ω–æ–∫, –¥–ª—è –±—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó.",
        {
          reply_markup: {
            inline_keyboard: [
              ...newMarkUp,
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        }
      );
    }
    if (ctx.data.startsWith("properties")) {
      const prop = await propertyCtrl.getPropertyTelegramById(
        ctx.data.split(" ")[1]
      );
      // if (!prop.hasElectic) {
      //   throw new Error(
      //     `–£ –¥—ñ–ª—è–Ω–∫–∏ ‚Ññ${prop.propertyNumber} –≤—ñ–¥—Å—É—Ç–Ω—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–≤—ñ—Ç–ª–∞.`
      //   );
      // }
      const electricData = prop.electricData[0];
      await bot.sendMessage(
        ctx.message.chat.id,
        `–î—ñ–ª—è–Ω–∫–∞ ‚Ññ${prop.propertyNumber}.\n<u>–ß–õ–ï–ù–°–¨–ö–Ü –í–ù–ï–°–ö–ò</u>: ${
          prop.dueArrears
            ? `${prop.dues
                .filter((item) => item.needPay > 0)
                .map((item) => {
                  if (item.needPay > 0) {
                    return `\n- ${item.year} —Ä—ñ–∫: <b><i>${item.needPay} –≥—Ä–Ω</i></b>`;
                  }
                })}\n–ó–∞–≥–∞–ª–æ–º: <b><i>${prop.dueArrears} –≥—Ä–Ω</i></b>.`
            : "—É –≤–∞—Å –≤—Å–µ –æ–ø–ª–∞—á–µ–Ω–æ."
        }${
          prop.hasElectic
            ? `\n\n<u>–°–í–Ü–¢–õ–û</u>: \n–ó–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å –ø–æ —Å–≤—ñ—Ç–ª—É: <i>${
                electricData?.debt ?? 0
              } –≥—Ä–Ω</i>.\n–ü–æ–∫–∞–∑–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ ${
                electricData
                  ? `—Å—Ç–∞–Ω–æ–º –Ω–∞ ${electricData.date}: ${electricData.current}`
                  : "–≤—ñ–¥—Å—É—Ç–Ω—ñ"
              }. `
            : ""
        }\n\n–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:`,
        {
          parse_mode: "HTML",
          reply_markup: {
            inline_keyboard: [
              prop.hasElectic
                ? [
                    {
                      text: "üìù –ü–æ–¥–∞—Ç–∏ –ø–æ–∫–∞–∑–Ω–∏–∫",
                      callback_data: `pokaz ${prop._id}`,
                    },
                    {
                      text: "‚òÄÔ∏è –û–ø–ª–∞—Ç–∏—Ç–∏ —Å–≤—ñ—Ç–ª–æ",
                      callback_data: `electricpay ${prop._id}`,
                    },
                  ]
                : [],
              [
                {
                  text: "ü´Ç –û–ø–ª–∞—Ç–∏—Ç–∏ —á–ª–µ–Ω—Å—å–∫–∏–π –≤–Ω–µ—Å–æ–∫",
                  callback_data: `duespay ${prop._id}`,
                },
              ],
              [
                {
                  text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                  callback_data: `propertyPage`,
                },
                { text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" },
              ],
            ],
          },
        }
      );
    }
    if (ctx.data.startsWith("pokaz")) {
      const propId = ctx.data.split(" ")[1];
      const prop = await propertyCtrl.getPropertyTelegramById(propId);

      const dateToday = formatDate();
      // Check date
      if (prop.electricData.length > 0) {
        if (dateToday.split(".")[0] < 27 && dateToday.split(".")[0] > 3) {
          return await bot.sendMessage(
            ctx.message.chat.id,
            `–í–∏–±–∞—á—Ç–µ, –∞–ª–µ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –º–æ–∂–Ω–∞ –ø–æ–¥–∞–≤–∞—Ç–∏ –ª–∏—à–µ –∑ 27 —á–∏—Å–ª–∞ –ø–æ 03.`,
            {
              parse_mode: "HTML",
              reply_markup: {
                inline_keyboard: [
                  [
                    {
                      text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                      callback_data: `properties ${prop._id}`,
                    },
                    { text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" },
                  ],
                ],
              },
            }
          );
        }
        if (dayCounter(dateToday, prop.electricData[0].date) < 10) {
          return await bot.sendMessage(
            ctx.message.chat.id,
            `–í–∏ —É–∂–µ –ø–æ–¥–∞–≤–∞–ª–∏ –ø–æ–∫–∞–∑–Ω–∏–∫ —Ü—å–æ–≥–æ –º—ñ—Å—è—Ü—è. \n–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –ø–æ–∫–∞–∑–Ω–∏–∫ <u><i>${prop.electricData[0].current}</i></u> –±—É–≤ –ø–æ–¥–∞–Ω–∏–π <u><i>${prop.electricData[0].date}</i></u>.\n–ü–æ–∫–∞–∑–Ω–∏–∫ –º–æ–∂–Ω–∞ –±—É–¥–µ –ø–æ–¥–∞—Ç–∏ –∑ –ø–æ—á–∞—Ç–∫—É –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –º—ñ—Å—è—Ü—è.  \n–Ø–∫—â–æ –≤–∏ –¥–æ–ø—É—Å—Ç–∏–ª–∏ –ø–æ–º–∏–ª–∫—É, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ <ins>–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤—É</ins>.`,
            {
              parse_mode: "HTML",
              reply_markup: {
                inline_keyboard: [
                  [
                    {
                      text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                      callback_data: `properties ${prop._id}`,
                    },
                    { text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" },
                  ],
                ],
              },
            }
          );
        }
      }
      await bot.sendMessage(
        ctx.message.chat.id,
        "–ü–æ–¥–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π –ø–æ–∫–∞–∑–Ω–∏–∫ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞:",
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        }
      );
      userCallbackData[ctx.message.chat.id] = {
        propId,
      };
    }
    if (ctx.data.startsWith("electricpay")) {
      const prop = await propertyCtrl.getPropertyTelegramById(
        ctx.data.split(" ")[1]
      );
      const { propertyNumber, electricData } = prop;
      const { debt, current, _id, previous } = electricData[0];
      if (debt <= 0) {
        await bot.sendMessage(
          ctx.message.chat.id,
          "–£ –≤–∞—Å –≤—ñ–¥—Å—É—Ç–Ω—ñ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω–æ—Å—Ç—ñ –ø–æ –æ–ø–ª–∞—Ç—ñ —Å–≤—ñ—Ç–ª–∞!",
          {
            reply_markup: {
              inline_keyboard: [
                [
                  {
                    text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                    callback_data: `properties ${prop._id}`,
                  },
                  { text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" },
                ],
              ],
            },
          }
        );
      } else {
        const randomUID = v4();
        const ownerLastName = user.name.split(" ")[0];
        const json_string = {
          order_id: `${randomUID}`,
          customer: `${prop._id}`,
          server_url: `${SERVER_URL}/api/prop/electricstatus`,
          ...LIQPAY_CONSTANTS,
          amount: Number(debt) * 1.02,
          description: `–û–ø–ª–∞—Ç–∞ –∑–∞ —Å–ø–æ–∂–∏—Ç—É –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—é –∑–≥—ñ–¥–Ω–æ –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤(${previous} - ${current}). –î—ñ–ª—è–Ω–∫–∞ ‚Ññ${propertyNumber} (${ownerLastName}).`,
        };
        const { signature, data } = getLiqpayData(json_string);
        axios
          .post(
            `https://www.liqpay.ua/api/3/checkout?data=${data}&signature=${signature}`
          )
          .then(async (data) => {
            await bot.sendMessage(
              ctx.message.chat.id,
              `–°—É–º–∞ –∑–≥—ñ–¥–Ω–æ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω–æ—Å—Ç–µ–π: ${Number(debt)} –≥—Ä–Ω. –ö–æ–º—ñ—Å—ñ—è 2%: ${
                Number(debt) * 0.02
              } –≥—Ä–Ω. –î–æ –æ–ø–ª–∞—Ç–∏: ${(Number(debt) * 1.02).toFixed(
                2
              )} –≥—Ä–Ω.\n–¢–µ–ø–µ—Ä –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –æ–ø–ª–∞—Ç–∏ –∫–æ–º–ø–∞–Ω—ñ—ó "LiqPay".\n–©–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –æ–ø–ª–∞—Ç–∏, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ ‚¨áÔ∏è`,
              {
                reply_markup: {
                  inline_keyboard: [
                    [
                      {
                        text: "üí∞ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –æ–ø–ª–∞—Ç–∏",
                        url: `${data.request.res.responseUrl}`,
                      },
                    ],
                    [
                      {
                        text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        callback_data: `properties ${prop._id}`,
                      },
                      { text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" },
                    ],
                  ],
                  one_time_keyboard: true,
                },
              }
            );
          });
      }
    }
    if (ctx.data.startsWith("duespay")) {
      const prop = await propertyCtrl.getPropertyTelegramById(
        ctx.data.split(" ")[1]
      );
      const { propertyNumber, dueArrears, dues } = prop;

      if (dueArrears <= 0) {
        await bot.sendMessage(
          ctx.message.chat.id,
          "–£ –≤–∞—Å –≤—ñ–¥—Å—É—Ç–Ω—ñ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω–æ—Å—Ç—ñ –ø–æ –æ–ø–ª–∞—Ç—ñ —á–ª–µ–Ω—Å—å–∫–∏—Ö –≤–Ω–µ—Å–∫—ñ–≤!",
          {
            reply_markup: {
              inline_keyboard: [
                [
                  {
                    text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                    callback_data: `properties ${prop._id}`,
                  },
                  { text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" },
                ],
              ],
            },
          }
        );
      } else {
        const randomUID = v4();
        const ownerLastName = user.name.split(" ")[0];
        const unpaidYears = dues
          .filter((item) => item.needPay > 0)
          .map((item) => item.year);

        const json_string = {
          order_id: `${randomUID}`,
          customer: `${prop._id}`,
          server_url: `${SERVER_URL}/api/prop/duestatus`,
          ...LIQPAY_CONSTANTS,
          amount: Number(dueArrears) * 1.02,
          description: `–û–ø–ª–∞—Ç–∞ —á–ª–µ–Ω—Å—å–∫–æ–≥–æ –≤–Ω–µ—Å–∫—É –∑–∞ [${unpaidYears.join(
            ", "
          )}]. –î—ñ–ª—è–Ω–∫–∞ ‚Ññ${propertyNumber} (${ownerLastName}).`,
        };

        const { signature, data } = getLiqpayData(json_string);
        axios
          .post(
            `https://www.liqpay.ua/api/3/checkout?data=${data}&signature=${signature}`
          )
          .then(async (data) => {
            await bot.sendMessage(
              ctx.message.chat.id,
              `–°—É–º–∞ –∑–≥—ñ–¥–Ω–æ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω–æ—Å—Ç–µ–π: ${Number(
                dueArrears
              )} –≥—Ä–Ω. –ö–æ–º—ñ—Å—ñ—è 2%: ${
                Number(dueArrears) * 0.02
              } –≥—Ä–Ω. –î–æ –æ–ø–ª–∞—Ç–∏: ${(Number(dueArrears) * 1.02).toFixed(
                2
              )} –≥—Ä–Ω.\n–¢–µ–ø–µ—Ä –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –æ–ø–ª–∞—Ç–∏ –∫–æ–º–ø–∞–Ω—ñ—ó "LiqPay".\n–©–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –æ–ø–ª–∞—Ç–∏, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ ‚¨áÔ∏è`,
              {
                reply_markup: {
                  inline_keyboard: [
                    [
                      {
                        text: "üí∞ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –æ–ø–ª–∞—Ç–∏",
                        url: `${data.request.res.responseUrl}`,
                      },
                    ],
                    [
                      {
                        text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        callback_data: `properties ${prop._id}`,
                      },
                      { text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" },
                    ],
                  ],
                  one_time_keyboard: true,
                },
              }
            );
          });
      }
    }
    if (ctx.data === "debtorPage") {
      await bot.sendMessage(
        ctx.message.chat.id,
        "–°–∫–æ—Ä–æ —Ç—É—Ç –ø–æ—è–≤–∏—Ç—å—Å—è —Å–ø–∏—Å–æ–∫ –æ—Å—ñ–±, —è–∫—ñ –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —á–ª–µ–Ω—Å—å–∫—ñ –≤–Ω–µ—Å–∫–∏ –∑–∞ 2023 —Ä—ñ–∫ —Ç–∞ —Ä–∞–Ω—ñ—à–µ.",
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        }
      );
    }
    if (ctx.data === "newsPage") {
      if (user.phone === "0112223344") {
        return await bot.sendMessage(
          ctx.message.chat.id,
          "üî¥ –ù–µ–º–∞—î –∞–∫—Ç—É–∞–ª—å–Ω–∏—Ö –Ω–æ–≤–∏–Ω! üî¥",
          {
            reply_markup: {
              inline_keyboard: [
                [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
              ],
            },
          }
        );
      }
      await bot.sendMessage(
        ctx.message.chat.id,
        "üî¥ –ß–ª–µ–Ω—Å—å–∫—ñ –≤–Ω–µ—Å–∫–∏ –∑–∞ 2024 —Ä—ñ–∫.üî¥\n\n–ù–∞–≥–∞–¥—É—î–º–æ –∑–∞ –≤–Ω–µ—Å–∫–∏ —É 2024 —Ä–æ—Ü—ñ - 1440 –≥—Ä–Ω.\n–î–∞–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è –±—É–ª–æ –ø—Ä–∏–π–Ω—è—Ç–æ –Ω–∞ –∑–±–æ—Ä–∞—Ö –≤ –ª–∏–ø–Ω—ñ 23 —Ä–æ–∫—É. \n\n–û–ø–ª–∞—Ç—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Å—ñ–º —á–ª–µ–Ω–∞–º –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤—É –û–ë–û–í'–Ø–ó–ö–û–í–û –∑–∞–∫—Ä–∏—Ç–∏. \n–û–ø–ª–∞—Ç–∏—Ç–∏ –º–æ–∂–µ—Ç–µ —É –¢–µ–ª–µ–≥—Ä–∞–º –ë–æ—Ç—ñ –ø–µ—Ä–µ–π—à–æ–≤—à–∏ –Ω–∞ \n–ì–æ–ª–æ–≤–Ω—É –°—Ç–æ—Ä—ñ–Ω–∫—É > –î—ñ–ª—è–Ω–∫–∏ > –î—ñ–ª—è–Ω–∫–∞ ‚Ññ > –û–ø–ª–∞—Ç–∏—Ç–∏ —á–ª–µ–Ω—Å—å–∫–∏–π –≤–Ω–µ—Å–æ–∫. \n\n–ó –ø–æ–≤–∞–≥–æ—é, –ü—Ä–∞–≤–ª—ñ–Ω–Ω—è –°–ì–ö '–°–¢–ò–ú–£–õ'.",
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        }
      );
    }
    if (ctx.data === "pollPage") {
      await bot.sendMessage(
        ctx.message.chat.id,
        "–ù–µ–º–∞—î –∞–∫—Ç—É–∞–ª—å–Ω–∏—Ö –≥–æ–ª–æ—Å—É–≤–∞–Ω—å!",
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        }
      );
    }
    if (ctx.data === "aboutPage") {
      await bot.sendMessage(
        ctx.message.chat.id,
        `–°–ê–î–û–í–û-–ì–û–†–û–î–ù–Ñ –¢–û–í–ê–†–ò–°–¢–í–û –°–¢–ò–ú–£–õ
–Æ—Ä–∏–¥–∏—á–Ω–∞ –∞–¥—Ä–µ—Å–∞:
81084, –°.–ö–û–ñ–ò–ß–Ü, –í–£–õ.–¶–ï–ù–¢–†–ê–õ–¨–ù–ê –ë–£–î.- ,
–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π–Ω–∏–π –∫–æ–¥ —é—Ä–∏–¥–∏—á–Ω–æ—ó –æ—Å–æ–±–∏ - 36031384
–ì–æ–ª–æ–≤–∞ –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤—É - –î—É–±–∞–Ω –ù–∞–∑–∞—Ä
–ö–æ–Ω—Ç–∞–∫—Ç–∏: stymulhome@gmail.com
\n–ê–∫—Ç—É–∞–ª—å–Ω—ñ —Ç–∞—Ä–∏—Ñ–∏ —Ç–∞ –æ–ø–ª–∞—Ç–∏ –Ω–∞ ${new Date().getFullYear()} —Ä—ñ–∫\n1. –¢–∞—Ä–∏—Ñ –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó - 3 –≥—Ä–Ω/–∫–í—Ç\n2. –¢–∞—Ä–∏—Ñ –Ω–∞ —Ä—ñ—á–Ω–∏–π —á–ª–µ–Ω—Å—å–∫–∏–π –≤–Ω–µ—Å–æ–∫ - 1440 –≥—Ä–Ω/—Ä—ñ–∫.`,
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        }
      );
    }

    const emptyKeyboard = { reply_markup: { inline_keyboard: [] } };

    bot.editMessageReplyMarkup(emptyKeyboard, {
      chat_id: ctx.message.chat.id,
      message_id: ctx.message.message_id,
    });
  } catch (error) {
    await bot.sendMessage(ctx.message.chat.id, error.message, {
      reply_markup: {
        inline_keyboard: [
          [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
        ],
      },
    });
  }
});

bot.on("text", async (msg) => {
  try {
    if (msg.text == "/start") {
      const demoPhoneNumber = "0112223344";
      const demoUser = await userCtrl.getUserTelegramByPhone(demoPhoneNumber);

      if (demoUser.telegramChatId === msg.chat.id.toString()) {
        const updatedUser = await userCtrl.addTelegramChatIdToUser(
          "0112223344",
          ""
        );
      }

      await bot.sendMessage(
        msg.chat.id,
        `–î–ª—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –≤–ª–∞—Å–Ω–∏–∫–∞ –¥—ñ–ª—è–Ω–∫–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—å –Ω–æ–º–µ—Ä–æ–º –º–æ–±—ñ–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.`,
        {
          reply_markup: {
            keyboard: [
              [
                { text: "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact: true },
                // "üíº –î–µ–º–æ-–∫–∞–±—ñ–Ω–µ—Ç",
              ],
            ],
            one_time_keyboard: true,
            is_persistent: true,
            resize_keyboard: true,
          },
        }
      );
    } else if (msg.text == "üíº –î–µ–º–æ-–∫–∞–±—ñ–Ω–µ—Ç") {
      const updatedUser = await userCtrl.addTelegramChatIdToUser(
        "0112223344",
        msg.chat.id
      );
      await bot.sendMessage(
        msg.chat.id,
        `–í—ñ—Ç–∞—é –≤–∏ –æ–±—Ä–∞–ª–∏ –¥–µ–º–æ-–≤–µ—Ä—Å—ñ—é. \n\n–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É`,
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        }
      );
    } else if (msg.text == "/help") {
      await bot.sendMessage(
        msg.chat.id,
        `–ö–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞: \n/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç\n/oferta - –¥–æ–≥–æ–≤—ñ—Ä –ø—É–±–ª—ñ—á–Ω–æ—ó –æ—Ñ–µ—Ä—Ç–∏\n/help - —É—Å—ñ –∫–æ–º–∞–Ω–¥–∏`
      );
    } else if (msg.text == "/oferta") {
      await bot.sendMessage(
        msg.chat.id,
        `–ü–£–ë–õ–Ü–ß–ù–ò–ô –î–û–ì–û–í–Ü–† (–û–§–ï–†–¢–ê)\n
–¶–µ–π –¥–æ–≥–æ–≤—ñ—Ä —î –æ—Ñ—ñ—Ü—ñ–π–Ω–æ—é —Ç–∞ –ø—É–±–ª—ñ—á–Ω–æ—é –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—î—é –°–∞–¥–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∏—Å—Ç–≤–∞ —É–∫–ª–∞—Å—Ç–∏ –¥–æ–≥–æ–≤—ñ—Ä –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ–≥–æ —É –±–æ—Ç—ñ https://t.me/stymulBot. –î–∞–Ω–∏–π –¥–æ–≥–æ–≤—ñ—Ä —î –ø—É–±–ª—ñ—á–Ω–∏–º, —Ç–æ–±—Ç–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —Å—Ç–∞—Ç—Ç—ñ 633 –¶–∏–≤—ñ–ª—å–Ω–æ–≥–æ –∫–æ–¥–µ–∫—Å—É –£–∫—Ä–∞—ó–Ω–∏, –π–æ–≥–æ —É–º–æ–≤–∏ —î –æ–¥–Ω–∞–∫–æ–≤–∏–º–∏ –¥–ª—è –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —ó—Ö —Å—Ç–∞—Ç—É—Å—É –±–µ–∑ –Ω–∞–¥–∞–Ω–Ω—è –ø–µ—Ä–µ–≤–∞–≥–∏ –æ–¥–Ω–æ–º—É –ø–µ—Ä–µ–¥ —ñ–Ω—à–∏–º. –®–ª—è—Ö–æ–º —É–∫–ª–∞–¥–µ–Ω–Ω—è —Ü—å–æ–≥–æ –î–æ–≥–æ–≤–æ—Ä—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –ø–æ–≤–Ω–æ–º—É –æ–±—Å—è–∑—ñ –ø—Ä–∏–π–º–∞—î —É–º–æ–≤–∏ —Ç–∞ –ø–æ—Ä—è–¥–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø–æ—Å–ª—É–≥, –æ–ø–ª–∞—Ç–∏ –ø–æ—Å–ª—É–≥, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ –Ω–µ–¥–æ–±—Ä–æ—Å–æ–≤—ñ—Å–Ω–µ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥ —Ç–∞ —É—Å—ñ —ñ–Ω—à—ñ —É–º–æ–≤–∏ –¥–æ–≥–æ–≤–æ—Ä—É. –î–æ–≥–æ–≤—ñ—Ä –≤–≤–∞–∂–∞—î—Ç—å—Å—è —É–∫–ª–∞–¥–µ–Ω–∏–º –∑ –º–æ–º–µ–Ω—Ç—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É —Å–∏—Å—Ç–µ–º—ñ, –∞ —Å–∞–º–µ –≤–≤–µ–¥–µ–Ω–Ω—è –ü—ñ–Ω-–∫–æ–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è  –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —É —á–∞—Ç-–±–æ—Ç—ñ.
\n1. –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–µ—Ä–º—ñ–Ω—ñ–≤
1.1. –ü—É–±–ª—ñ—á–Ω–∞ –æ—Ñ–µ—Ä—Ç–∞ (–¥–∞–ª—ñ - ¬´–û—Ñ–µ—Ä—Ç–∞¬ª) - –ø—É–±–ª—ñ—á–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –í–∏–∫–æ–Ω–∞–≤—Ü—è, –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–∞ –Ω–µ–≤–∏–∑–Ω–∞—á–µ–Ω–æ–º—É –∫–æ–ª—É –æ—Å—ñ–±, —É–∫–ª–∞—Å—Ç–∏ –∑ –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º –¥–æ–≥–æ–≤—ñ—Ä –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥ –¥–∏—Å—Ç–∞–Ω—Ü—ñ–π–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º (–¥–∞–ª—ñ - ¬´–î–æ–≥–æ–≤—ñ—Ä¬ª) –Ω–∞ —É–º–æ–≤–∞—Ö, —â–æ –º—ñ—Å—Ç—è—Ç—å—Å—è –≤ —Ü—ñ–π –û—Ñ–µ—Ä—Ç—ñ.
1.2. –ü–æ—Å–ª—É–≥–∞ ‚Äì –æ–±'—î–∫—Ç —É–≥–æ–¥–∏ —Å—Ç–æ—Ä—ñ–Ω, —è–∫–∏–π –±—É–≤ –æ–±—Ä–∞–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —É –ë–æ—Ç—ñ, –∞–±–æ –≤–∂–µ –æ–ø–ª–∞—á–µ–Ω–∏–π –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —É –í–∏–∫–æ–Ω–∞–≤—Ü—è –¥–∏—Å—Ç–∞–Ω—Ü—ñ–π–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º.
1.3. –ë–æ—Ç ‚Äì —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —É –¥–æ–¥–∞—Ç–∫—É "Telegram" –∑–∞ –∞–¥—Ä–µ—Å–æ—é https://t.me/stymulBot —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è –æ–∑–Ω–∞–π–æ–º–ª–µ–Ω–Ω—è –∑ –ø–æ—Å–ª—É–≥–∞–º–∏ —Ç–∞ –æ–ø–ª–∞—Ç–∏ –ø–æ—Å–ª—É–≥ –Ω–∞ –ø—ñ–¥—Å—Ç–∞–≤—ñ –æ–∑–Ω–∞–π–æ–º–ª–µ–Ω–Ω—è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ–∑ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∏–º –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º –æ–ø–∏—Å–æ–º –ü–æ—Å–ª—É–≥ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ä–µ–∂—ñ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç.
1.4. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ‚Äì –¥—ñ—î–∑–¥–∞—Ç–Ω–∞ —Ñ—ñ–∑–∏—á–Ω–∞ –æ—Å–æ–±–∞, —è–∫–∞ –¥–æ—Å—è–≥–ª–∞ 18 —Ä–æ–∫—ñ–≤, –æ—Ç—Ä–∏–º—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –≤—ñ–¥ –í–∏–∫–æ–Ω–∞–≤—Ü—è.
1.5. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å ‚Äì –°–∞–¥–æ–≤–æ –ì–æ—Ä–æ–¥–Ω—î –¢–æ–≤–∞—Ä–∏—Å—Ç–≤–æ ¬´–°—Ç–∏–º—É–ª¬ª (—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π–Ω–∏–π –∫–æ–¥ 36031384), —é—Ä–∏–¥–∏—á–Ω–∞ –æ—Å–æ–±–∞, —è–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ —ñ –¥—ñ—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —á–∏–Ω–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–∞ –£–∫—Ä–∞—ó–Ω–∏, –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è —è–∫–æ—ó: 81084, –°.–ö–û–ñ–ò–ß–Ü, –í–£–õ.–¶–ï–ù–¢–†–ê–õ–¨–ù–ê –ë–£–î.- ,
1.6. –ü—ñ–Ω-–∫–æ–¥ - –Ω–∞–±—ñ—Ä —Ü–∏—Ñ—Ä —è–∫–∏–π –≤–≤–æ–¥–∏—Ç—å –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —É –ë–æ—Ç—ñ.
\n2. –ü—Ä–µ–¥–º–µ—Ç –î–æ–≥–æ–≤–æ—Ä—É
2.1. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –∑–æ–±–æ–≤‚Äô—è–∑—É—î—Ç—å—Å—è –Ω–∞–¥–∞—Ç–∏ –ü–æ—Å–ª—É–≥–∏ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ, –∞ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–æ–±–æ–≤‚Äô—è–∑—É—î—Ç—å—Å—è –æ–ø–ª–∞—Ç–∏—Ç–∏ —ñ –ø—Ä–∏–π–Ω—è—Ç–∏ –ü–æ—Å–ª—É–≥–∏ –Ω–∞ —É–º–æ–≤–∞—Ö —Ü—å–æ–≥–æ –î–æ–≥–æ–≤–æ—Ä—É.
2.2. –î–∞—Ç–æ—é —É–∫–ª–∞–¥–µ–Ω–Ω—è –î–æ–≥–æ–≤–æ—Ä—É-–æ—Ñ–µ—Ä—Ç–∏ (–∞–∫—Ü–µ–ø—Ç–æ–º –æ—Ñ–µ—Ä—Ç–∏) —Ç–∞ –º–æ–º–µ–Ω—Ç–æ–º –ø–æ–≤–Ω–æ–≥–æ –π –±–µ–∑–∑–∞–ø–µ—Ä–µ—á–Ω–æ–≥–æ –ø—Ä–∏–π–Ω—è—Ç—Ç—è–º –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É–º–æ–≤ –î–æ–≥–æ–≤–æ—Ä—É –≤–≤–∞–∂–∞—î—Ç—å—Å—è –¥–∞—Ç–∞ –æ–ø–ª–∞—Ç–∏ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –Ω–∞–¥–∞–Ω–∏—Ö –ø–æ—Å–ª—É–≥.
\n3. –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è
3.1. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –≤–∏–±–∏—Ä–∞—î –ø–æ—Å–ª—É–≥–∏ –≤ –ë–æ—Ç—ñ.
3.2. –ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥–∏ –≤–∫–∞–∑—É—é—Ç—å—Å—è –≤ –ë–æ—Ç—ñ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É –û–ø–ª–∞—Ç–∞.
3.3. –£—Ö–≤–∞–ª–µ–Ω–Ω—è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —É–º–æ–≤ —Ü—ñ—î—ó –û—Ñ–µ—Ä—Ç–∏ –∑–¥—ñ–π—Å–Ω—é—î—Ç—å—Å—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –≤–Ω–µ—Å–µ–Ω–Ω—è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö –≤ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ–π–Ω—É —Ñ–æ—Ä–º—É —É –ë–æ—Ç—ñ.
3.4. –£–∫–ª–∞–¥–∞—é—á–∏ –î–æ–≥–æ–≤—ñ—Ä, —Ç–æ–±—Ç–æ –∞–∫—Ü–µ–ø—Ç—É—é—á–∏ —É–º–æ–≤–∏ –¥–∞–Ω–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó (–∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω—ñ —É–º–æ–≤–∏ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥), —à–ª—è—Ö–æ–º –æ–ø–ª–∞—Ç–∏ –∑–∞ –ø–æ—Å–ª—É–≥–∏, –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î –Ω–∞—Å—Ç—É–ø–Ω–µ:
–∞) –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ü—ñ–ª–∫–æ–º —ñ –ø–æ–≤–Ω—ñ—Å—Ç—é –æ–∑–Ω–∞–π–æ–º–ª–µ–Ω–∏–π, —ñ –∑–≥–æ–¥–µ–Ω –∑ —É–º–æ–≤–∞–º–∏ —Ü—ñ—î—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó (–æ—Ñ–µ—Ä—Ç–∏);
–±) –≤—ñ–Ω –¥–∞—î –¥–æ–∑–≤—ñ–ª –Ω–∞ –∑–±—ñ—Ä, –æ–±—Ä–æ–±–∫—É —Ç–∞ –ø–µ—Ä–µ–¥–∞—á—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö, –¥–æ–∑–≤—ñ–ª –Ω–∞ –æ–±—Ä–æ–±–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –¥—ñ—î –ø—Ä–æ—Ç—è–≥–æ–º —É—Å—å–æ–≥–æ —Ç–µ—Ä–º—ñ–Ω—É –¥—ñ—ó –î–æ–≥–æ–≤–æ—Ä—É, –∞ —Ç–∞–∫–æ–∂ –ø—Ä–æ—Ç—è–≥–æ–º –Ω–µ–æ–±–º–µ–∂–µ–Ω–æ–≥–æ —Ç–µ—Ä–º—ñ–Ω—É –ø—ñ—Å–ª—è –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è –π–æ–≥–æ –¥—ñ—ó. –ö—Ä—ñ–º —Ü—å–æ–≥–æ, —É–∫–ª–∞–¥–µ–Ω–Ω—è–º –¥–æ–≥–æ–≤–æ—Ä—É –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î, —â–æ –≤—ñ–Ω –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–∏–π (–±–µ–∑ –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è) –ø—Ä–æ –ø—Ä–∞–≤–∞, –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—Ö –ó–∞–∫–æ–Ω–æ–º –£–∫—Ä–∞—ó–Ω–∏ "–ü—Ä–æ –∑–∞—Ö–∏—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö", –ø—Ä–æ —Ü—ñ–ª—ñ –∑–±–æ—Ä—É –¥–∞–Ω–∏—Ö, –∞ —Ç–∞–∫–æ–∂ –ø—Ä–æ —Ç–µ, —â–æ –π–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –ø–µ—Ä–µ–¥–∞—é—Ç—å—Å—è –í–∏–∫–æ–Ω–∞–≤—Ü—é –∑ –º–µ—Ç–æ—é –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —É–º–æ–≤ —Ü—å–æ–≥–æ –î–æ–≥–æ–≤–æ—Ä—É, –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è –≤–∑–∞—î–º–æ—Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤, –∞ —Ç–∞–∫–æ–∂ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—ñ–≤, –∞–∫—Ç—ñ–≤ —Ç–∞ —ñ–Ω—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ç–∞–∫–æ–∂ –ø–æ–≥–æ–¥–∂—É—î—Ç—å—Å—è –∑ —Ç–∏–º, —â–æ –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –º–∞—î –ø—Ä–∞–≤–æ –Ω–∞–¥–∞–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø —Ç–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –π–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ —Ç—Ä–µ—Ç—ñ–º –æ—Å–æ–±–∞–º –±–µ–∑ –±—É–¥—å-—è–∫–∏—Ö –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –º–µ—Ç–æ—é –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥–∏ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –û–±—Å—è–≥ –ø—Ä–∞–≤ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫ —Å—É–±'—î–∫—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –ó–∞–∫–æ–Ω—É –£–∫—Ä–∞—ó–Ω–∏ "–ü—Ä–æ –∑–∞—Ö–∏—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö" –π–æ–º—É –≤—ñ–¥–æ–º–∏–π —ñ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π.
`
      );
      await bot.sendMessage(
        msg.chat.id,
        `\n4. –£–º–æ–≤–∏ —Ç–∞ –ø–æ—Ä—è–¥–æ–∫ —Å–ø–ª–∞—Ç–∏ –ø–æ—Å–ª—É–≥
4.1. –¶—ñ–Ω–∏ –ü–æ—Å–ª—É–≥–∏ –≤–∏–∑–Ω–∞—á–∞—é—Ç—å—Å—è –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ —Ç–∞ –≤–∫–∞–∑–∞–Ω—ñ —É –ë–æ—Ç—ñ.
4.2. –¶—ñ–Ω–∏ –Ω–∞ –ü–æ—Å–ª—É–≥–∏ –º–æ–∂—É—Ç—å –∑–º—ñ–Ω—é–≤–∞—Ç–∏—Å—è –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º –≤ –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—å–æ–º—É –ø–æ—Ä—è–¥–∫—É –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫–æ–Ω'—é–Ω–∫—Ç—É—Ä–∏ —Ä–∏–Ω–∫—É. –ü—Ä–∏ —Ü—å–æ–º—É —Ü—ñ–Ω–∞ –æ–∫—Ä–µ–º–æ—ó –æ–¥–∏–Ω–∏—Ü—ñ –ü–æ—Å–ª—É–≥–∏, –≤–∞—Ä—Ç—ñ—Å—Ç—å —è–∫–æ—ó –æ–ø–ª–∞—á–µ–Ω–∞ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –≤ –ø–æ–≤–Ω–æ–º—É –æ–±—Å—è–∑—ñ, –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –∑–º—ñ–Ω–µ–Ω–∞ –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º –≤ –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—å–æ–º—É –ø–æ—Ä—è–¥–∫—É.
4.3. –ö–æ–º—ñ—Å—ñ—è –∑–∞ –æ–ø–ª–∞—Ç—É –ü–æ—Å–ª—É–≥–∏ —á–µ—Ä–µ–∑ –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫ LiqPay —Å—Ç–∞–Ω–æ–≤–∏—Ç—å 2% –≤—ñ–¥ —Å—É–º–∏ –ü–æ—Å–ª—É–≥–∏. –ö–æ–º—ñ—Å—ñ—è –¥–æ–¥–∞—î—Ç—å—Å—è –¥–æ —Å—É–º–∏ –ü–æ—Å–ª—É–≥–∏ –ø—Ä–∏ –æ–ø–ª–∞—Ç—ñ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤—ñ—Å LiqPay. –ê —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∫–æ–º—ñ—Å—ñ—ó –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è —É –ë–æ—Ç—ñ.
4.4. –ö–æ–º—ñ—Å—ñ—è —Å—Ç—è–≥—É—î—Ç—å—Å—è –∑–∞ –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è —Ç–∞ –∑–∞ —Ñ–∞–∫—Ç–∏—á–Ω—É –∑—Ä—É—á–Ω—ñ—Å—Ç—å –æ–ø–ª–∞—Ç–∏ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤—ñ—Å LiqPay.
4.5. –ó–æ–±–æ–≤'—è–∑–∞–Ω–Ω—è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–æ –æ–ø–ª–∞—Ç—ñ –ü–æ—Å–ª—É–≥–∏ –≤–≤–∞–∂–∞—é—Ç—å—Å—è –≤–∏–∫–æ–Ω–∞–Ω–∏–º–∏ –∑ –º–æ–º–µ–Ω—Ç—É –Ω–∞–¥—Ö–æ–¥–∂–µ–Ω–Ω—è –í–∏–∫–æ–Ω–∞–≤—Ü—é –∫–æ—à—Ç—ñ–≤ –Ω–∞ –π–æ–≥–æ —Ä–∞—Ö—É–Ω–æ–∫.
4.6. –†–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ —É —Ü—å–æ–º—É –ë–æ—Ç—ñ –º—ñ–∂ –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º —ñ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –∑–∞ –ü–æ—Å–ª—É–≥–∏ –∑–¥—ñ–π—Å–Ω—é—é—Ç—å—Å—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –ø–ª–∞—Ç—ñ–∂–Ω–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É LiqPay —Ç–∞ –æ—Ç—Ä–∏–º—É–≤–∞—á–µ–º –∫–æ—à—Ç—ñ–≤ —î "–û–ö –°–ê–î–û–í–û-–ì–û–†–û–î–ù–Ñ –¢–û–í–ê–†–ò–°–¢–í–û –°–¢–ò–ú–£–õ".
4.7. –£ —Ä–∞–∑—ñ –Ω–µ–º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –∞–±–æ –≤—ñ–¥–º–æ–≤–∏ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –ø–æ—Å–ª—É–≥–∞–º–∏ –í–∏–∫–æ–Ω–∞–≤—Ü—è, –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –ø—ñ–∑–Ω—ñ—à–µ –Ω—ñ–∂ –∑–∞ 1 (–æ–¥–∏–Ω) –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∏–π –º—ñ—Å—è—Ü—å –¥–æ –¥–∞—Ç–∏ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥–∏, –∑–∞–∑–Ω–∞—á–µ–Ω–æ—ó –≤ —Ä–∞—Ö—É–Ω–∫—É, –ø–∏—Å—å–º–æ–≤–æ –ø–æ–≤—ñ–¥–æ–º–ª—è—î –í–∏–∫–æ–Ω–∞–≤—Ü—è –ø—Ä–æ —Ü–µ. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –Ω–∞ –ø—ñ–¥—Å—Ç–∞–≤—ñ –ø–∏—Å—å–º–æ–≤–æ—ó –∑–∞—è–≤–∏ –∑–¥—ñ–π—Å–Ω—é—î –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è —Å–ø–ª–∞—á–µ–Ω–∏—Ö –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –∫–æ—à—Ç—ñ–≤ –ø—Ä–æ—Ç—è–≥–æ–º 1 (–æ–¥–Ω–æ–≥–æ) –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –º—ñ—Å—è—Ü—è –∑ –¥–Ω—è –Ω–∞–¥–∞–Ω–Ω—è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –ø–∏—Å—å–º–æ–≤–æ—ó –∑–∞—è–≤–∏ —ñ–∑ –∑–∞–∑–Ω–∞—á–µ–Ω–Ω—è–º —Ä–µ–∫–≤—ñ–∑–∏—Ç—ñ–≤ —Ä–∞—Ö—É–Ω–∫—É –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
4.8. –£ —Ä–∞–∑—ñ –Ω–µ–º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ —á–∏ –≤—ñ–¥–º–æ–≤–∏ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –ø–æ—Å–ª—É–≥–∞–º–∏ –í–∏–∫–æ–Ω–∞–≤—Ü—è –º–µ–Ω—à–µ –Ω—ñ–∂ –∑–∞ 1 (–æ–¥–∏–Ω) –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∏–π –º—ñ—Å—è—Ü—Ç –¥–æ –¥–∞—Ç–∏ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥, –æ–ø–ª–∞—Ç–∞, –≤–Ω–µ—Å–µ–Ω–∞ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –∑–∞ –ø–æ—Å–ª—É–≥–∏, –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è, —è–∫—â–æ —ñ–Ω—à–µ –Ω–µ –ø–æ–≥–æ–¥–∂–µ–Ω–æ –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º —Ç–∞ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.
\n5. –ü—Ä–∞–≤–∞ —Ç–∞ –æ–±–æ–≤‚Äô—è–∑–∫–∏ –°—Ç–æ—Ä—ñ–Ω
5.1. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –∑–æ–±–æ–≤‚Äô—è–∑–∞–Ω–∏–π:
5.1.1. –ü–µ—Ä–µ–¥–∞—Ç–∏ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ü–æ—Å–ª—É–≥–∏ —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ –¥–æ —É–º–æ–≤ —Ü—å–æ–≥–æ –î–æ–≥–æ–≤–æ—Ä—É —Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
5.1.2. –ù–µ —Ä–æ–∑–≥–æ–ª–æ—à—É–≤–∞—Ç–∏ –±—É–¥—å-—è–∫—É –ø—Ä–∏–≤–∞—Ç–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –Ω–µ –Ω–∞–¥–∞–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ —Ü—ñ—î—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —Ç—Ä–µ—Ç—ñ–º –æ—Å–æ–±–∞–º, –∑–∞ –≤–∏–Ω—è—Ç–∫–æ–º –≤–∏–ø–∞–¥–∫—ñ–≤, –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∏—Ö –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–æ–º —Ç–∞ –ø—ñ–¥ —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ü–æ—Å–ª–µ–≥–∏ –¥–ª—è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
5.2. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –º–∞—î –ø—Ä–∞–≤–æ:
5.2.1 –ó–º—ñ–Ω—é–≤–∞—Ç–∏ —É–º–æ–≤–∏ —Ü—å–æ–≥–æ –î–æ–≥–æ–≤–æ—Ä—É, –∞ —Ç–∞–∫–æ–∂ —Ü—ñ–Ω–∏ –Ω–∞ –ü–æ—Å–ª—É–≥–∏, –≤ –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—å–æ–º—É –ø–æ—Ä—è–¥–∫—É, —Ä–æ–∑–º—ñ—â—É—é—á–∏ —ó—Ö —É –ë–æ—Ç—ñ. –í—Å—ñ –∑–º—ñ–Ω–∏ –Ω–∞–±—É–≤–∞—é—Ç—å —á–∏–Ω–Ω–æ—Å—Ç—ñ –∑ –º–æ–º–µ–Ω—Ç—É —ó—Ö –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó.
5.3 –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–æ–±–æ–≤'—è–∑—É—î—Ç—å—Å—è:
5.3.1 –î–æ –º–æ–º–µ–Ω—Ç—É —É–∫–ª–∞–¥–µ–Ω–Ω—è –î–æ–≥–æ–≤–æ—Ä—É –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –∑—ñ –∑–º—ñ—Å—Ç–æ–º –î–æ–≥–æ–≤–æ—Ä—É, —É–º–æ–≤–∞–º–∏ –î–æ–≥–æ–≤–æ—Ä—É —ñ —Ü—ñ–Ω–∞–º–∏, –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∏–º–∏ –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º —É –ë–æ—Ç—ñ.
5.3.2 –ù–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º —Å–≤–æ—ó—Ö –∑–æ–±–æ–≤'—è–∑–∞–Ω—å –ø–µ—Ä–µ–¥ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –æ—Å—Ç–∞–Ω–Ω—ñ–π –ø–æ–≤–∏–Ω–µ–Ω –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ, —â–æ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫—É—é—Ç—å –π–æ–≥–æ —è–∫ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —ñ –¥–æ—Å—Ç–∞—Ç–Ω—ñ –¥–ª—è –Ω–∞–¥–∞–≤–∞–Ω–Ω—è –ü–æ—Å–ª—É–≥–∏.
`
      );
      await bot.sendMessage(
        msg.chat.id,
        `\n6. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å
6.1. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –Ω–µ –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ —à–∫–æ–¥—É, –∑–∞–ø–æ–¥—ñ—è–Ω—É –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –∞–±–æ —Ç—Ä–µ—Ç—ñ–º –æ—Å–æ–±–∞–º –≤–Ω–∞—Å–ª—ñ–¥–æ–∫ –Ω–µ–Ω–∞–ª–µ–∂–Ω–æ–≥–æ –º–æ–Ω—Ç–∞–∂—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è —è–∫–µ —Å–ª—É–∂–∏—Ç—å –¥–ª—è –Ω–∞–¥–∞–Ω–Ω—è –ü–æ—Å–ª—É–≥–∏.
6.2. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –Ω–µ –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ –Ω–µ–Ω–∞–ª–µ–∂–Ω–µ, –Ω–µ—Å–≤–æ—î—á–∞—Å–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ü–æ—Å–ª—É–≥–∏ —ñ —Å–≤–æ—ó—Ö –∑–æ–±–æ–≤‚Äô—è–∑–∞–Ω—å —É –≤–∏–ø–∞–¥–∫—É –Ω–∞–¥–∞–Ω–Ω—è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –Ω–µ–¥–æ—Å—Ç–æ–≤—ñ—Ä–Ω–æ—ó –∞–±–æ –ø–æ–º–∏–ª–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó.
6.3. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å —ñ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ—Å—É—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å –∑–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Å–≤–æ—ó—Ö –∑–æ–±–æ–≤'—è–∑–∞–Ω—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —á–∏–Ω–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–∞ –£–∫—Ä–∞—ó–Ω–∏ —ñ –ø–æ–ª–æ–∂–µ–Ω—å —Ü—å–æ–≥–æ –î–æ–≥–æ–≤–æ—Ä—É.
6.4. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –∞–±–æ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–≤—ñ–ª—å–Ω—è—é—Ç—å—Å—è –≤—ñ–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ –ø–æ–≤–Ω–µ –∞–±–æ —á–∞—Å—Ç–∫–æ–≤–µ –Ω–µ–≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Å–≤–æ—ó—Ö –∑–æ–±–æ–≤'—è–∑–∞–Ω—å, —è–∫—â–æ –Ω–µ–≤–∏–∫–æ–Ω–∞–Ω–Ω—è —î –Ω–∞—Å–ª—ñ–¥–∫–æ–º —Ñ–æ—Ä—Å-–º–∞–∂–æ—Ä–Ω–∏—Ö –æ–±—Å—Ç–∞–≤–∏–Ω —è–∫: –≤—ñ–π–Ω–∞ –∞–±–æ –≤—ñ–π—Å—å–∫–æ–≤—ñ –¥—ñ—ó, –∑–µ–º–ª–µ—Ç—Ä—É—Å, –ø–æ–≤—ñ–Ω—å, –ø–æ–∂–µ–∂–∞ —Ç–∞ —ñ–Ω—à—ñ —Å—Ç–∏—Ö—ñ–π–Ω—ñ –ª–∏—Ö–∞, —â–æ –≤–∏–Ω–∏–∫–ª–∏ –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –≤–æ–ª—ñ –í–∏–∫–æ–Ω–∞–≤—Ü—è —ñ / –∞–±–æ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—ñ—Å–ª—è —É–∫–ª–∞–¥–µ–Ω–Ω—è —Ü—å–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä—É. –°—Ç–æ—Ä–æ–Ω–∞, —è–∫–∞ –Ω–µ –º–æ–∂–µ –≤–∏–∫–æ–Ω–∞—Ç–∏ —Å–≤–æ—ó –∑–æ–±–æ–≤'—è–∑–∞–Ω–Ω—è, –Ω–µ–≥–∞–π–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª—è—î –ø—Ä–æ —Ü–µ —ñ–Ω—à—É –°—Ç–æ—Ä–æ–Ω—É.
\n7. –ö–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω—ñ—Å—Ç—å —ñ –∑–∞—Ö–∏—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö.
7.1. –ù–∞–¥–∞—é—á–∏ —Å–≤–æ—ó –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ —É –ë–æ—Ç—ñ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó, –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–¥–∞—î –í–∏–∫–æ–Ω–∞–≤—Ü–µ–≤—ñ —Å–≤–æ—é –¥–æ–±—Ä–æ–≤—ñ–ª—å–Ω—É –∑–≥–æ–¥—É –Ω–∞ –æ–±—Ä–æ–±–∫—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è (—É —Ç–æ–º—É —á–∏—Å–ª—ñ —ñ –ø–µ—Ä–µ–¥–∞—á—É) —Å–≤–æ—ó—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö, –∞ —Ç–∞–∫–æ–∂ –≤—á–∏–Ω–µ–Ω–Ω—è —ñ–Ω—à–∏—Ö –¥—ñ–π, –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∏—Ö –ó–∞–∫–æ–Ω–æ–º –£–∫—Ä–∞—ó–Ω–∏ ¬´–ü—Ä–æ –∑–∞—Ö–∏—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö¬ª, –±–µ–∑ –æ–±–º–µ–∂–µ–Ω–Ω—è —Ç–µ—Ä–º—ñ–Ω—É –¥—ñ—ó —Ç–∞–∫–æ—ó –∑–≥–æ–¥–∏.
7.2. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –∑–æ–±–æ–≤'—è–∑—É—î—Ç—å—Å—è –Ω–µ —Ä–æ–∑–≥–æ–ª–æ—à—É–≤–∞—Ç–∏ –æ—Ç—Ä–∏–º–∞–Ω—É –≤—ñ–¥ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é. –ù–µ –≤–≤–∞–∂–∞—î—Ç—å—Å—è –ø–æ—Ä—É—à–µ–Ω–Ω—è–º –Ω–∞–¥–∞–Ω–Ω—è –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞–º —ñ —Ç—Ä–µ—Ç—ñ–º –æ—Å–æ–±–∞–º, —â–æ –¥—ñ—é—Ç—å –Ω–∞ –ø—ñ–¥—Å—Ç–∞–≤—ñ –¥–æ–≥–æ–≤–æ—Ä—É –∑ –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º, –≤ —Ç–æ–º—É —á–∏—Å–ª—ñ —ñ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–æ–±–æ–≤'—è–∑–∞–Ω—å –ø–µ—Ä–µ–¥ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º, –∞ —Ç–∞–∫–æ–∂ —É –≤–∏–ø–∞–¥–∫–∞—Ö, –∫–æ–ª–∏ —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è —Ç–∞–∫–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤–∏–º–æ–≥–∞–º–∏ —á–∏–Ω–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–∞ –£–∫—Ä–∞—ó–Ω–∏.
7.3. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å –∑–∞ –ø—ñ–¥—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–≤–æ—ó—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É —Å—Ç–∞–Ω—ñ. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –Ω–µ –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ –Ω–µ—è–∫—ñ—Å–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∞–±–æ –Ω–µ–≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Å–≤–æ—ó—Ö –∑–æ–±–æ–≤'—è–∑–∞–Ω—å —É –∑–≤'—è–∑–∫—É –∑ –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ñ—Å—Ç—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—é —ó—ó –¥—ñ–π—Å–Ω–æ—Å—Ç—ñ.
\n8. –Ü–Ω—à—ñ —É–º–æ–≤–∏
8.1. –¶–µ–π –¥–æ–≥–æ–≤—ñ—Ä —É–∫–ª–∞–¥–µ–Ω–æ –Ω–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –£–∫—Ä–∞—ó–Ω–∏ —ñ –¥—ñ—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —á–∏–Ω–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–∞ –£–∫—Ä–∞—ó–Ω–∏.
8.2. –£—Å—ñ —Å–ø–æ—Ä–∏, —â–æ –≤–∏–Ω–∏–∫–∞—é—Ç—å –º—ñ–∂ –í–∏–∫–æ–Ω–∞–≤—Ü–µ–º —ñ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º, –≤–∏—Ä—ñ—à—É—é—Ç—å—Å—è —à–ª—è—Ö–æ–º –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ñ–≤. –£ –≤–∏–ø–∞–¥–∫—É –Ω–µ–¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è –≤—Ä–µ–≥—É–ª—é–≤–∞–Ω–Ω—è —Å–ø—ñ—Ä–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è —à–ª—è—Ö–æ–º –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ñ–≤, –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ç–∞/–∞–±–æ –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –º–∞—é—Ç—å –ø—Ä–∞–≤–æ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –∑–∞ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è–º —Å–ø–æ—Ä—É –¥–æ —Å—É–¥–æ–≤–∏—Ö –æ—Ä–≥–∞–Ω—ñ–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —á–∏–Ω–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–∞ –£–∫—Ä–∞—ó–Ω–∏.
8.3. –í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –º–∞—î –ø—Ä–∞–≤–æ –≤–Ω–æ—Å–∏—Ç–∏ –∑–º—ñ–Ω–∏ –¥–æ —Ü—å–æ–≥–æ –î–æ–≥–æ–≤–æ—Ä—É –≤ –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—å–æ–º—É –ø–æ—Ä—è–¥–∫—É, –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–æ–º—É –ø. 5.2.1. –î–æ–≥–æ–≤–æ—Ä—É. –ö—Ä—ñ–º —Ç–æ–≥–æ, –∑–º—ñ–Ω–∏ –¥–æ –î–æ–≥–æ–≤–æ—Ä—É —Ç–∞–∫–æ–∂ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤–Ω–µ—Å–µ–Ω—ñ –∑–∞ –≤–∑–∞—î–º–Ω–æ—é –∑–≥–æ–¥–æ—é –°—Ç–æ—Ä—ñ–Ω –≤ –ø–æ—Ä—è–¥–∫—É, –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–æ–º—É —á–∏–Ω–Ω–∏–º –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–æ–º –£–∫—Ä–∞—ó–Ω–∏. `
      );
    } else if (msg.text == "/giveid") {
      await bot.sendMessage(msg.chat.id, msg.chat.id);
    } else if (userCallbackData[msg.chat.id]?.userPhone) {
      const phoneNumer = userCallbackData[msg.chat.id].userPhone;
      const findedUser = await userCtrl.getUserTelegramByPhone(phoneNumer);
      if (findedUser.pinCode !== msg.text) {
        throw new Error("–í–∏ –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –ø–∞—Ä–æ–ª—å, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
      }

      const updatedUser = await userCtrl.addTelegramChatIdToUser(
        phoneNumer,
        msg.chat.id
      );
      await bot.sendMessage(
        msg.chat.id,
        `${updatedUser.name} —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. \n\n–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É`,
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        }
      );

      delete userCallbackData[msg.chat.id];
    } else if (userCallbackData[msg.chat.id]?.propId) {
      const propertyId = userCallbackData[msg.chat.id].propId;
      const prop = await propertyCtrl.getPropertyTelegramById(propertyId);
      if (prop.electricData.length > 0) {
        if (Number(msg.text) < prop.electricData[0].current) {
          return await bot.sendMessage(
            msg.chat.id,
            "–ü–æ–∫–∞–∑–Ω–∏–∫ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –±—ñ–ª—å—à–∏–º –∑–∞ –º–∏–Ω—É–ª–∏–π. –í–ø–∏—à—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –ø–æ–∫–∞–∑–Ω–∏–∫."
          );
        }
      }
      const electricDataExists = prop.electricData.length > 0;
      const electricData = electricDataExists ? prop.electricData[0] : null;
      const forPay =
        (Number(msg.text) - (electricData?.current || 0)) *
          prop.electricTariff +
        (electricData?.debt || 0);

      await propertyCtrl.addTelegramElecticData(propertyId, [
        {
          date: formatDate(),
          current: Number(msg.text),
          previous: electricDataExists ? electricData.current : 0,
          forPay: forPay,
          paid: 0,
          debt: forPay,
        },
        ...prop.electricData,
      ]);
      await bot.sendMessage(
        msg.chat.id,
        `–ü–æ–∫–∞–∑–Ω–∏–∫ <i>${
          msg.text
        }</i> —É—Å–ø—ñ—à–Ω–æ –ø–æ–¥–∞–Ω–∏–π. –ë–æ—Ä–≥ –∑–∞ –º–∏–Ω—É–ª—ñ –º—ñ—Å—è—Ü—ñ: <i>${
          prop.electricData[0]?.debt ?? 0
        }</i>. –î–æ –æ–ø–ª–∞—Ç–∏: <i>${
          (Number(msg.text) -
            ((prop.electricData[0] && prop.electricData[0].current) || 0)) *
            prop.electricTariff +
          (prop.electricData[0]?.debt || 0)
        } –≥—Ä–Ω</i>.`,
        {
          parse_mode: "HTML",
          reply_markup: {
            inline_keyboard: [
              [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
            ],
          },
        }
      );

      delete userCallbackData[msg.chat.id];
    } else if (prepareAlert.hasOwnProperty(msg.chat.id)) {
      await bot.sendMessage(
        msg.chat.id,
        `${msg.text}\n\n–û—Å—å —Ç–∞–∫ –≤–∏–≥–ª—è–¥–∞—Ç–∏–º–µ –≤–∞—à–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è. –í–∏ –¥—ñ–π—Å–Ω–æ –±–∞–∂–∞—î—Ç–µ –π–æ–≥–æ –æ–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –¥–ª—è –≤—Å—ñ—Ö?`,
        {
          reply_markup: {
            inline_keyboard: [
              [
                { text: "üîâ –û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏", callback_data: "alertAdv" },
                { text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" },
              ],
            ],
          },
        }
      );
    } else {
      const user = await userCtrl.getUserByChatId(msg.chat.id);
      if (!user) {
        await bot.sendMessage(
          msg.chat.id,
          "–í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ, –±—É–¥—å-–ª–∞—Å–∫–∞ –ø—Ä–æ–π–¥—ñ—Ç—å —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é."
        );
      } else {
        await bot.sendMessage(
          msg.chat.id,
          "–Ø –≤–∞—Å –Ω–µ —Ä–æ–∑—É–º—ñ—é. –í–∏–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç —ñ–∑ –º–µ–Ω—é:",
          {
            reply_markup: {
              inline_keyboard: [
                [{ text: "üè™ –ù–∞ –≥–æ–ª–æ–≤–Ω—É", callback_data: "mainPage" }],
              ],
            },
          }
        );
      }
    }
  } catch (error) {
    await bot.sendMessage(msg.chat.id, error.message);
  }
});

bot.on("contact", async (contact) => {
  try {
    const userPhone = contact.contact.phone_number.slice(2);
    const findUser = await userCtrl.getUserTelegramByPhone(userPhone);
    if (!findUser) {
      throw new Error(
        "–£ –¥–æ—Å—Ç—É–ø—ñ –≤—ñ–¥–º–æ–≤–ª–µ–Ω–æ. –í–∞—à –º–æ–±—ñ–ª—å–Ω–∏–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö."
      );
    }
    userCallbackData[contact.chat.id] = {
      userPhone,
    };
    await bot.sendMessage(
      contact.chat.id,
      "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –ü—ñ–Ω-–∫–æ–¥, –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –≤ –¥–æ–¥–∞—Ç–∫—É. –ü—ñ–Ω-–∫–æ–¥ –º–æ–∂–Ω–∞ –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —É –ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤—É.\n\n–í–≤–µ–¥–µ–Ω–Ω—è–º –ü—ñ–Ω-–∫–æ–¥—É –≤–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î—Ç–µ, —â–æ –æ–∑–Ω–∞–π–æ–º–ª–µ–Ω—ñ —Ç–∞ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ —É–º–æ–≤–∞–º–∏ –¥–æ–≥–æ–≤–æ—Ä—É –ø—É–±–ª—ñ—á–Ω–æ—ó –æ—Ñ–µ—Ä—Ç–∏, —è–∫–∏–π –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É –º–µ–Ω—ñ —Ü—å–æ–≥–æ –ë–æ—Ç–∞ –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω—ñ /oferta –∞–±–æ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ '–î–æ–≥–æ–≤—ñ—Ä –û—Ñ–µ—Ä—Ç–∏' —É –º–µ–Ω—é —Ü—å–æ–≥–æ –ë–æ—Ç–∞.",
      {
        reply_markup: {
          remove_keyboard: true,
        },
      }
    );
  } catch (error) {
    return await bot.sendMessage(contact.chat.id, error.message);
  }
});

bot.on("polling_error", (err) => console.log(err.response.body));

module.exports = { app };
